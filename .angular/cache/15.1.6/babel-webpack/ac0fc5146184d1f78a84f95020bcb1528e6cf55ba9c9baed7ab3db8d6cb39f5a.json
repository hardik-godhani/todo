{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@kolkov/angular-editor\";\nexport class NoteComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.editorConfig = {\n      editable: true,\n      spellcheck: true,\n      height: '25rem',\n      minHeight: '5rem',\n      placeholder: 'Enter your notes here...',\n      translate: 'no',\n      width: '100%',\n      toolbarPosition: 'bottom',\n      outline: false,\n      showToolbar: false,\n      uploadWithCredentials: false,\n      customClasses: [\n      // optional\n      {\n        name: 'quote',\n        class: 'quote'\n      }, {\n        name: 'redText',\n        class: 'redText'\n      }, {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1'\n      }]\n    };\n    this.creteForm();\n  }\n  creteForm() {\n    this.notesForm = this.fb.group({\n      notes: this.fb.array([])\n    });\n  }\n  get notes() {\n    return this.notesForm.get('notes');\n  }\n  addNotes() {\n    let newGroup = this.fb.group({\n      title: '',\n      note: ''\n    });\n    this.notes.push(newGroup);\n  }\n  removeNote(i) {\n    this.notes.removeAt(i);\n  }\n  submit() {\n    console.log(this.notesForm.value);\n  }\n}\nNoteComponent.ɵfac = function NoteComponent_Factory(t) {\n  return new (t || NoteComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nNoteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NoteComponent,\n  selectors: [[\"app-note\"]],\n  decls: 1,\n  vars: 2,\n  consts: [[\"formControlName\", \"note\", 3, \"id\", \"config\"]],\n  template: function NoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"angular-editor\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.id)(\"config\", ctx.editorConfig);\n    }\n  },\n  dependencies: [i2.AngularEditorComponent, i1.NgControlStatus, i1.FormControlName],\n  styles: [\".note-wrapper[_ngcontent-%COMP%], .note-container[_ngcontent-%COMP%] {\\n  max-width: 920px;\\n  margin-top: 10px;\\n  margin: 0 auto;\\n}\\n\\n.note-wrapper[_ngcontent-%COMP%] {\\n  padding: 10px;\\n}\\n\\n.note-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 10px;\\n  margin-top: 10px;\\n}\\n\\n.single-note[_ngcontent-%COMP%] {\\n  position: relative;\\n  flex: 1 0 32%;\\n  margin-bottom: 10px;\\n  max-width: 32%;\\n  border: 1px solid black;\\n}\\n\\n.close-icon[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  position: absolute;\\n  right: 5px;\\n  top: 3px;\\n  z-index: 5;\\n  cursor: pointer;\\n}\\n\\n.btn-wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 10px;\\n}\\n\\n.title-div[_ngcontent-%COMP%] {\\n  padding: 4px;\\n  padding-top: 10px;\\n}\\n.title-div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding-left: 10px;\\n  font-size: 20px;\\n  outline: none;\\n  border: none;\\n  width: 90%;\\n}\\n\\n[_nghost-%COMP%]     .angular-editor-textarea, [_nghost-%COMP%]     .angular-editor-toolbar.ng-star-inserted {\\n  border: none !important;\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .single-note[_ngcontent-%COMP%] {\\n    flex: 1 0 100%;\\n    max-width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvaGVyby1wYWdlL25vdGUvbm90ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUNBO0VBQ0UsYUFBQTtBQUVGOztBQUNBO0VBQ0UsYUFBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBRUEsZ0JBQUE7QUFDRjs7QUFDQTtFQUNFLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtFQUNBLHVCQUFBO0FBRUY7O0FBQ0E7RUFDRSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFFBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtBQUVGOztBQUFBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsZ0JBQUE7QUFHRjs7QUFBQTtFQUNFLFlBQUE7RUFDQSxpQkFBQTtBQUdGO0FBRkU7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7QUFJSjs7QUFBQTtFQUNJLHVCQUFBO0FBR0o7O0FBQUE7RUFDRTtJQUNFLGNBQUE7SUFDQSxlQUFBO0VBR0Y7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5ub3RlLXdyYXBwZXIsXHJcbi5ub3RlLWNvbnRhaW5lciB7XHJcbiAgbWF4LXdpZHRoOiA5MjBweDtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcbi5ub3RlLXdyYXBwZXIge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5ub3RlLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgZ2FwOiAxMHB4O1xyXG5cclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbi5zaW5nbGUtbm90ZSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGZsZXg6IDEgMCAzMiU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBtYXgtd2lkdGg6IDMyJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxufVxyXG5cclxuLmNsb3NlLWljb24ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDVweDtcclxuICB0b3A6IDNweDtcclxuICB6LWluZGV4OiA1O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4uYnRuLXdyYXBwZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi50aXRsZS1kaXZ7XHJcbiAgcGFkZGluZzogNHB4O1xyXG4gIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gIGlucHV0IHtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gIH1cclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5hbmd1bGFyLWVkaXRvci10ZXh0YXJlYSwgOmhvc3QgOjpuZy1kZWVwIC5hbmd1bGFyLWVkaXRvci10b29sYmFyLm5nLXN0YXItaW5zZXJ0ZWQge1xyXG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcclxuICAuc2luZ2xlLW5vdGUge1xyXG4gICAgZmxleDogMSAwIDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAItB,iBAAY,GAAwB;MAClCC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE,MAAM;MACjBC,WAAW,EAAE,0BAA0B;MACvCC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,MAAM;MACbC,eAAe,EAAE,QAAQ;MACzBC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE,KAAK;MAClBC,qBAAqB,EAAE,KAAK;MAC5BC,aAAa,EAAE;MACb;MACA;QACEC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE;OACR,EACD;QACED,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;OACR,EACD;QACED,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE,WAAW;QAClBC,GAAG,EAAE;OACN;KAEJ;IA/BC,IAAI,CAACC,SAAS,EAAE;EAClB;EA+BAA,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,IAAI,CAACjB,EAAE,CAACkB,KAAK,CAAC;MAC7BC,KAAK,EAAE,IAAI,CAACnB,EAAE,CAACoB,KAAK,CAAC,EAAE;KACxB,CAAC;EACJ;EACA,IAAID,KAAK;IACP,OAAO,IAAI,CAACF,SAAS,CAACI,GAAG,CAAC,OAAO,CAAc;EACjD;EAEAC,QAAQ;IACN,IAAIC,QAAQ,GAAG,IAAI,CAACvB,EAAE,CAACkB,KAAK,CAAC;MAC3BM,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE;KACP,CAAC;IACF,IAAI,CAACN,KAAK,CAACO,IAAI,CAACH,QAAQ,CAAC;EAC3B;EACAI,UAAU,CAACC,CAAS;IAClB,IAAI,CAACT,KAAK,CAACU,QAAQ,CAACD,CAAC,CAAC;EACxB;EACAE,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,SAAS,CAACgB,KAAK,CAAC;EACnC;;AAzDWnC,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR1BC,oCAA0F;;;MAA1EA,2BAAS","names":["NoteComponent","constructor","fb","editable","spellcheck","height","minHeight","placeholder","translate","width","toolbarPosition","outline","showToolbar","uploadWithCredentials","customClasses","name","class","tag","creteForm","notesForm","group","notes","array","get","addNotes","newGroup","title","note","push","removeNote","i","removeAt","submit","console","log","value","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\hardik\\Downloads\\login-register-notes\\src\\app\\pages\\hero-page\\note\\note.component.ts","C:\\Users\\hardik\\Downloads\\login-register-notes\\src\\app\\pages\\hero-page\\note\\note.component.html"],"sourcesContent":["import { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Component } from '@angular/core';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\n@Component({\r\n  selector: 'app-note',\r\n  templateUrl: './note.component.html',\r\n  styleUrls: ['./note.component.scss'],\r\n})\r\nexport class NoteComponent {\r\n  htmlContent: any;\r\n  notesForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.creteForm();\r\n  }\r\n\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '25rem',\r\n    minHeight: '5rem',\r\n    placeholder: 'Enter your notes here...',\r\n    translate: 'no',\r\n    width: '100%',\r\n    toolbarPosition: 'bottom',\r\n    outline: false,\r\n    showToolbar: false,\r\n    uploadWithCredentials: false, // if needed\r\n    customClasses: [\r\n      // optional\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText',\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n  };\r\n  creteForm() {\r\n    this.notesForm = this.fb.group({\r\n      notes: this.fb.array([]),\r\n    });\r\n  }\r\n  get notes(): FormArray {\r\n    return this.notesForm.get('notes') as FormArray;\r\n  }\r\n\r\n  addNotes() {\r\n    let newGroup = this.fb.group({\r\n      title: '',\r\n      note: '',\r\n    });\r\n    this.notes.push(newGroup);\r\n  }\r\n  removeNote(i: number) {\r\n    this.notes.removeAt(i);\r\n  }\r\n  submit() {\r\n    console.log(this.notesForm.value);\r\n  }\r\n}\r\n","<angular-editor [id]=\"id\" formControlName=\"note\" [config]=\"editorConfig\"></angular-editor>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}