{"ast":null,"code":"import { Note } from 'src/app/core/model/note';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/note.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"../note/note.component\";\nfunction NotesPageComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"app-note\", 6);\n    i0.ɵɵlistener(\"refresh\", function NotesPageComponent_div_5_Template_app_note_refresh_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.getListOfNotes());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const note_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"note\", note_r1);\n  }\n}\nexport class NotesPageComponent {\n  constructor(noteService) {\n    this.noteService = noteService;\n    this.notes = [];\n    this.model = {\n      isCountOnly: false,\n      query: {},\n      options: {\n        page: 1,\n        paginate: 6\n      }\n    };\n    this.getListOfNotes();\n  }\n  getListOfNotes() {\n    this.noteService.listNotes(this.model).subscribe(resp => {\n      if (resp && resp.status == 'SUCCESS' && resp.data && resp.data.data) {\n        this.notes = [...this.notes, ...resp.data.data];\n      }\n    });\n  }\n  addNotes(id = '') {\n    let newGroup = new Note();\n    this.notes.push(newGroup);\n  }\n}\nNotesPageComponent.ɵfac = function NotesPageComponent_Factory(t) {\n  return new (t || NotesPageComponent)(i0.ɵɵdirectiveInject(i1.NoteService));\n};\nNotesPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NotesPageComponent,\n  selectors: [[\"app-notes-page\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"note-wrapper\"], [1, \"btn-wrapper\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"add-notes\", 3, \"click\"], [1, \"note-container\", 3, \"scroll\"], [\"class\", \"single-note\", 4, \"ngFor\", \"ngForOf\"], [1, \"single-note\"], [3, \"note\", \"refresh\"]],\n  template: function NotesPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function NotesPageComponent_Template_button_click_2_listener() {\n        return ctx.addNotes();\n      });\n      i0.ɵɵtext(3, \" Add Note \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵlistener(\"scroll\", function NotesPageComponent_Template_div_scroll_4_listener() {\n        ctx.model.options.page = ctx.model.options.page + 1;\n        return ctx.getListOfNotes();\n      });\n      i0.ɵɵtemplate(5, NotesPageComponent_div_5_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.notes.reverse());\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatButton, i4.NoteComponent],\n  styles: [\".note-wrapper[_ngcontent-%COMP%], .note-container[_ngcontent-%COMP%] {\\n  max-width: 920px;\\n  margin-top: 10px;\\n  margin: 0 auto;\\n}\\n\\n.note-wrapper[_ngcontent-%COMP%] {\\n  padding: 10px;\\n}\\n\\n.btn-wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 10px;\\n}\\n\\n.note-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 10px;\\n  margin-top: 10px;\\n}\\n\\n.single-note[_ngcontent-%COMP%] {\\n  position: relative;\\n  flex: 1 0 32%;\\n  margin-bottom: 10px;\\n  max-width: 32%;\\n  border: 1px solid black;\\n}\\n\\n.note-container[_ngcontent-%COMP%] {\\n  height: calc(100vh - 120px);\\n  overflow: auto;\\n}\\n\\n.note-container[_ngcontent-%COMP%]    > .single-note[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .single-note[_ngcontent-%COMP%] {\\n    flex: 1 0 100%;\\n    max-width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbm90ZXMtcGFnZS9ub3Rlcy1wYWdlL25vdGVzLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFDQTtFQUNFLGFBQUE7QUFFRjs7QUFDQTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLGdCQUFBO0FBRUY7O0FBQ0E7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFNBQUE7RUFFQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0VBQ0EsdUJBQUE7QUFDRjs7QUFFQTtFQUNFLDJCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsY0FBQTtJQUNBLGVBQUE7RUFDRjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLm5vdGUtd3JhcHBlcixcclxuLm5vdGUtY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDkyMHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuLm5vdGUtd3JhcHBlciB7XHJcbiAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuLmJ0bi13cmFwcGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4ubm90ZS1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGdhcDogMTBweDtcclxuXHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLnNpbmdsZS1ub3RlIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZmxleDogMSAwIDMyJTtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIG1heC13aWR0aDogMzIlO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG59XHJcblxyXG4ubm90ZS1jb250YWluZXIge1xyXG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDEyMHB4KTtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuLm5vdGUtY29udGFpbmVyID4gLnNpbmdsZS1ub3RlIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gIC5zaW5nbGUtbm90ZSB7XHJcbiAgICBmbGV4OiAxIDAgMTAwJTtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,yBAAyB;;;;;;;;;ICM1CC,8BAA6E;IACnDA;MAAAA;MAAA;MAAA,OAAWA,sCAAgB;IAAA,EAAC;IAACA,iBAAW;;;;IAAtDA,eAAa;IAAbA,8BAAa;;;ADC7B,OAAM,MAAOC,kBAAkB;EAW7BC,YAAmBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAV9B,UAAK,GAAW,EAAE;IAClB,UAAK,GAAG;MACNC,WAAW,EAAE,KAAK;MAClBC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;QACPC,IAAI,EAAE,CAAC;QACPC,QAAQ,EAAE;;KAEb;IAGC,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACN,WAAW,CAACO,SAAS,CAAC,IAAI,CAACC,KAAK,CAAC,CAACC,SAAS,CAAEC,IAAS,IAAI;MAC7D,IAAIA,IAAI,IAAIA,IAAI,CAACC,MAAM,IAAI,SAAS,IAAID,IAAI,CAACE,IAAI,IAAIF,IAAI,CAACE,IAAI,CAACA,IAAI,EAAE;QACnE,IAAI,CAACC,KAAK,GAAG,CAAC,GAAG,IAAI,CAACA,KAAK,EAAE,GAAGH,IAAI,CAACE,IAAI,CAACA,IAAI,CAAC;;IAEnD,CAAC,CAAC;EACJ;EAEAE,QAAQ,CAACC,EAAE,GAAG,EAAE;IACd,IAAIC,QAAQ,GAAG,IAAIpB,IAAI,EAAE;IACzB,IAAI,CAACiB,KAAK,CAACI,IAAI,CAACD,QAAQ,CAAC;EAC3B;;AA1BWlB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/BzB,8BAA0B;MAEsCA;QAAA,OAAS0B,cAAU;MAAA,EAAC;MAC9E1B,0BACF;MAAAA,iBAAS;MAEXA,8BAAqG;MAAzEA;QAAA0B,kDAAoD,CAAC;QAAA,OAAEA,oBAAgB;MAAA,EAAC;MAClG1B,mEAEM;MACRA,iBAAM;;;MAHsCA,eAAoB;MAApBA,6CAAoB","names":["Note","i0","NotesPageComponent","constructor","noteService","isCountOnly","query","options","page","paginate","getListOfNotes","listNotes","model","subscribe","resp","status","data","notes","addNotes","id","newGroup","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hardik\\Downloads\\login-register-notes\\src\\app\\pages\\notes-page\\notes-page\\notes-page.component.ts","C:\\Users\\hardik\\Downloads\\login-register-notes\\src\\app\\pages\\notes-page\\notes-page\\notes-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Note } from 'src/app/core/model/note';\r\nimport { NoteService } from 'src/app/core/services/note.service';\r\n\r\n@Component({\r\n  selector: 'app-notes-page',\r\n  templateUrl: './notes-page.component.html',\r\n  styleUrls: ['./notes-page.component.scss'],\r\n})\r\nexport class NotesPageComponent {\r\n  notes: Note[] = [];\r\n  model = {\r\n    isCountOnly: false,\r\n    query: {},\r\n    options: {\r\n      page: 1,\r\n      paginate: 6\r\n    },\r\n  };\r\n\r\n  constructor(public noteService: NoteService) {\r\n    this.getListOfNotes();\r\n  }\r\n\r\n  getListOfNotes() {\r\n    this.noteService.listNotes(this.model).subscribe((resp: any) => {\r\n      if (resp && resp.status == 'SUCCESS' && resp.data && resp.data.data) {\r\n        this.notes = [...this.notes, ...resp.data.data];\r\n      }\r\n    });\r\n  }\r\n\r\n  addNotes(id = '') {\r\n    let newGroup = new Note();\r\n    this.notes.push(newGroup);\r\n  }\r\n}\r\n","<div class=\"note-wrapper\">\r\n  <div class=\"btn-wrapper\">\r\n    <button mat-raised-button class=\"add-notes\" color=\"primary\" (click)=\"addNotes()\">\r\n      Add Note\r\n    </button>\r\n  </div>\r\n  <div class=\"note-container\" (scroll)=\"model.options.page = model.options.page + 1; getListOfNotes()\">\r\n    <div class=\"single-note\" *ngFor=\"let note of notes.reverse(); let i = index\">\r\n      <app-note [note]=\"note\" (refresh)=\"getListOfNotes()\"></app-note>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}