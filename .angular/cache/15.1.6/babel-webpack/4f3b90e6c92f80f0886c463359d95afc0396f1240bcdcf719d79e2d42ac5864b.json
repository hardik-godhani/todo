{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"../services/local-storage.service\";\nexport class AuthGuard {\n  constructor(router, authService, localStorageService) {\n    this.router = router;\n    this.authService = authService;\n    this.localStorageService = localStorageService;\n  }\n  canActivate(next, state) {\n    if (this.localStorageService.isLoggedIn()) {\n      const user = this.localStorageService.getUser();\n      if (user) {\n        this.router.navigate[''];\n        return true;\n      }\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n  canActivateChild(next, state) {\n    return true;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.LocalStorageService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAgBA,OAAM,MAAOA,SAAS;EACpBC,YACUC,MAAc,EACdC,WAAwB,EACxBC,mBAAwC;IAFxC,WAAM,GAANF,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,wBAAmB,GAAnBC,mBAAmB;EAC1B;EAEHC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAM1B,IAAI,IAAI,CAACH,mBAAmB,CAACI,UAAU,EAAE,EAAE;MACzC,MAAMC,IAAI,GAAG,IAAI,CAACL,mBAAmB,CAACM,OAAO,EAAE;MAE/C,IAAID,IAAI,EAAE;QACR,IAAI,CAACP,MAAM,CAACS,QAAQ,CAAC,EAAE,CAAC;QACxB,OAAO,IAAI;;;IAGf,IAAI,CAACT,MAAM,CAACS,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChC,OAAO,KAAK;EACd;EAEAC,gBAAgB,CACdN,IAA4B,EAC5BC,KAA0B;IAM1B,OAAO,IAAI;EACb;;AApCWP,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAa,SAATb,SAAS;EAAAc,YAFR;AAAM","names":["AuthGuard","constructor","router","authService","localStorageService","canActivate","next","state","isLoggedIn","user","getUser","navigate","canActivateChild","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hardik\\Downloads\\login-register-notes\\src\\app\\core\\guard\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  CanActivateChild,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { LocalStorageService } from '../services/local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private localStorageService: LocalStorageService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this.localStorageService.isLoggedIn()) {\r\n      const user = this.localStorageService.getUser();\r\n\r\n      if (user) {\r\n        this.router.navigate[''];\r\n        return true;\r\n      }\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n  canActivateChild(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return true;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}